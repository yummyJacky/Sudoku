import { writable } from 'svelte/store'
import { candidates } from '@sudoku/stores/candidates'
import { STRATEGIES } from '@sudoku/stragey/strategies/index'

// 添加候选数管理的工具函数
export const CandidateManager = {
    // 获取单元格的候选数
    getCandidates (grid, row, col) {
        if (grid[row][col] !== 0) return []
        const candidates = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9])

        // 检查行
        for (let c = 0; c < 9; c++) {
            if (grid[row][c] !== 0) candidates.delete(grid[row][c])
        }

        // 检查列
        for (let r = 0; r < 9; r++) {
            if (grid[r][col] !== 0) candidates.delete(grid[r][col])
        }

        // 检查3x3宫格
        const boxRow = Math.floor(row / 3) * 3
        const boxCol = Math.floor(col / 3) * 3
        for (let r = 0; r < 3; r++) {
            for (let c = 0; c < 3; c++) {
                if (grid[boxRow + r][boxCol + c] !== 0) {
                    candidates.delete(grid[boxRow + r][boxCol + c])
                }
            }
        }

        return Array.from(candidates)
    },

    // 获取整个网格的候选数
    getGridCandidates (grid) {
        const candidates = Array(9).fill().map(() =>
            Array(9).fill().map(() => []))

        for (let row = 0; row < 9; row++) {
            for (let col = 0; col < 9; col++) {
                if (grid[row][col] === 0) {
                    candidates[row][col] = this.getCandidates(grid, row, col)
                }
            }
        }

        return candidates
    }
}


// 创建策略提示 store
function createStrategyHint () {
    const store = writable({
        strategy: STRATEGIES.LAST_REMAINING_1,  // 设置默认策略
        position: null
    })

    return {
        subscribe: store.subscribe,
        setHint: (strategy, position) => {
            store.update(() => ({
                strategy: STRATEGIES[strategy] || STRATEGIES.BASIC_ELIMINATION,
                position
            }))
        },
        clear: () => {
            store.update(() => ({
                strategy: STRATEGIES.BASIC_ELIMINATION,  // 重置为默认策略
                position: null
            }))
        }
    }
}

export const strategyHint = createStrategyHint()
