import { writable } from 'svelte/store';

function createCandidates() {
	const store = writable({
		candidates: {},
		showCandidates: false,  // 默认不显示候选值
		highlights: {}  // 存储高亮信息
	});

	return {
		subscribe: store.subscribe,
		update: store.update,
		add(pos, candidate) {
			store.update($store => {
				const candidates = { ...$store.candidates };
				const key = `${pos.x},${pos.y}`;
				if (!candidates.hasOwnProperty(key)) {
					candidates[key] = [candidate];
				} else if (candidates[key].includes(candidate)) {
					delete candidates[key][candidates[key].indexOf(candidate)];
				} else {
					candidates[key].push(candidate);
				}
				return { ...$store, candidates };
			});
		},
		clear(pos) {
			store.update($store => {
				const candidates = { ...$store.candidates };
				const highlights = { ...$store.highlights };
				const key = `${pos.x},${pos.y}`;
				delete candidates[key];
				delete highlights[key];
				return { ...$store, candidates, highlights };
			});
		},
		toggleShow() {
			store.update($store => ({
				...$store,
				showCandidates: !$store.showCandidates
			}));
		},
		show() {
			store.update($store => ({
				...$store,
				showCandidates: true
			}));
		},
		highlightCandidate(pos, digit, highlightType) {
			store.update($store => {
				const highlights = { ...$store.highlights };
				const key = `${pos.x},${pos.y}`;
				if (!highlights[key]) {
					highlights[key] = {};
				}
				highlights[key][digit] = highlightType;
				return { ...$store, highlights };
			});
		},
		clearHighlights() {
			store.update($store => ({
				...$store,
				highlights: {}
			}));
		},
		hasOwnProperty(key) {
			let value;
			store.subscribe(store => {
				value = store.candidates.hasOwnProperty(key);
			})();
			return value;
		}
	}
}

export const candidates = createCandidates();